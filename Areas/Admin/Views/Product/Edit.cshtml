@model PostOFSales.Models.Product

@{
    ViewBag.Title = "Index";
    TempData.Keep();
}

<h1 class="heading__h1">
    Update Product
</h1>
@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form__row">
        @Html.ValidationSummary(true, "", new { @class = "danger" })
        @Html.HiddenFor(model => model.Product_Id)
    </div>
    <div class="form__row">
        @Html.LabelFor(model => model.ProdutName, htmlAttributes: new { @class = "form__row__label" })
        @Html.EditorFor(model => model.ProdutName)
        @Html.ValidationMessageFor(model => model.ProdutName, "", new { @class = "form__row__error danger" })
    </div>
    <div class="form__row">
        @Html.LabelFor(model => model.ProductQuantity, htmlAttributes: new { @class = "form__row__label" })
        @Html.EditorFor(model => model.ProductQuantity)
        @Html.ValidationMessageFor(model => model.ProductQuantity, "", new { @class = "form__row__error danger" })
    </div>
    <div class="form__row">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form__row__label" })
        @Html.EditorFor(model => model.Description)
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "form__row__error danger" })
    </div>
    <div class="form__row">
        @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "form__row__label" })
        @Html.EditorFor(model => model.Color)
        @Html.ValidationMessageFor(model => model.Color, "", new { @class = "form__row__error danger" })
    </div>
    <div class="form__row">
        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "form__row__label" })
        @Html.EditorFor(model => model.UnitPrice)
        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "form__row__error danger" })
    </div>
    <div class="form__row">
        @Html.LabelFor(model => model.Barcode, htmlAttributes: new { @class = "form__row__label" })
        @Html.EditorFor(model => model.Barcode)
        @Html.ValidationMessageFor(model => model.Barcode, "", new { @class = "form__row__error" })
    </div>
    <div class="form__row">
        @Html.LabelFor(model => model.category_Id, htmlAttributes: new { @class = "form__row__label" })
        @{ if (ViewBag.categoryModelList != null)
            { @Html.DropDownListFor(model => model.category_Id, ViewBag.categoryModelList as SelectList)}
        }
        @Html.ValidationMessageFor(model => model.category_Id, "", new { @class = "form__row__error danger" })
    </div>
    <div class="form__row">
        @Html.LabelFor(model => model.Model_Id, htmlAttributes: new { @class = "form__row__label" })
        @{ if (ViewBag.productModelList != null)
            {
                @Html.DropDownListFor(model => model.Model_Id, ViewBag.productModelList as SelectList)
                //@Html.DropDownList("Model_Id", (SelectList)ViewBag.Model_Id, "Select Model", htmlAttributes: new { @class = "require_one" })
            }
        }

        @Html.ValidationMessageFor(model => model.Model_Id, "", new { @class = "form__row__error danger" })
    </div>
    <div class="form__row">
        @Html.LabelFor(model => model.ProductTypeId, htmlAttributes: new { @class = "form__row__label" })
        @{ if (ViewBag.productTypeList != null)
            {
                @Html.DropDownListFor(model => model.category_Id, ViewBag.productTypeList as SelectList, htmlAttributes: new { @class = "require_one" })

            }
        }

        @Html.ValidationMessageFor(model => model.ProductTypeId, "", new { @class = "form__row__error danger" })
    </div>
    <div class="form__row">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "form__row__label" })
        @Html.TextBoxFor(model => model.Image, new { type = "file", accept = "image", onchange = "readUrl(this);" })
        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "form__row__error danger" })
    </div>
    <div class="form__row">
        <img id="imagePreview" src="@Url.Content(Model.Image)" alt="Image Preview" />
    </div>
    <div class="form__row">
        @{ if ((ViewBag.categoryModelList == null) || (ViewBag.productModelList == null) || (ViewBag.productTypeList == null))
            {
                <a href="~/Admin/Product/Create" class="small secondary">Back</a>
            }
            else
            {
                <button id="form__button" class="medium primary">Update Product</button>
            }
        }
    </div>
}

<script type="text/javascript">
    $(document).ready(
        function readUrl(input) {
            if (inpu.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $("imagePreview").attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }
    )

    //$(document).ready(
    //    function() {
    //        $("#form__button").attr('disabled', 'disabled');

    //        $('select').change(function () {
    //            if ($(this).hasClass('require_one')) {
    //                $("#form__button").removeAttr('disabled');
    //            }
    //        })




    //});
</script>



